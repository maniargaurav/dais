#!/usr/bin/env php
<?php

/*
|--------------------------------------------------------------------------
|   Egress
|--------------------------------------------------------------------------
|
|   This file is part of the Dais Framework package.
|    
|   Egress is a recoded version of Ruckusing Migrations for full
|   integration into the Dais Framework. For the original version and
|   details on Ruckusing Migrations see:
|    
|   https://github.com/ruckus/ruckusing-migrations
|    
|   All thanks to Cody Caughlan for the great work he did on this.
|    
|   (c) Vince Kronlein <vince@dais.io>
|    
|   For the full copyright and license information, please view the LICENSE
|   file that was distributed with this source code.
|    
|--------------------------------------------------------------------------
|   Dais Paths
|--------------------------------------------------------------------------
|
|   Pull in our paths and config from the Dais application.
|   
*/

require __DIR__ . '/bootstrap/paths.php';

/*
|--------------------------------------------------------------------------
|   Environment
|--------------------------------------------------------------------------
|
|   Set base and environment definitions.
|   
*/

define ('EGRESS_BASE', FRAMEWORK . 'Component/Egress/');


if (!defined('ENV')):
    $environment = 'development';
else:
    $environment = ENV;
endif;
// override for development
define('ENVIRONMENT', $environment);

/*
|--------------------------------------------------------------------------
|   Configuration
|--------------------------------------------------------------------------
|
|   Database and paths configuration, this should probably be moved
|   into bootstrap/paths or reworked to be more dynamic.
|   
*/

$db_config = require $config['base']['path.database'] . 'config' . SEP . 'db.php';

$paths = array(
    'migrations_dir' => array(
        'default' => $config['base']['path.database'] . 'migration'
    ),
    'db_dir'  => $config['base']['path.database'] . 'dump',
    'log_dir' => $config['base']['path.logs'] . 'migrations'
);

$db_config = array_merge($db_config, $paths);
unset($paths);

/*
|--------------------------------------------------------------------------
|   Namespace
|--------------------------------------------------------------------------
|
|   Work out the namespace for your migration files based on paths set
|   up in bootstrap/paths. This should be moved to a function to make it
|   cleaner. But it needs to be dynamic based on the user paths.
|   
*/

$mpath = str_replace(APP_PATH, '', $config['base']['path.database'] . 'migration');
$mn    = explode('/', $mpath);

foreach ($mn as $key => $value):
    $mn[$key] = ucfirst($value);
endforeach;

$mpath = implode('\\', $mn);

define('MIGRATION_NAMESPACE', $mpath);
unset($mpath);

/*
|--------------------------------------------------------------------------
|   Database
|--------------------------------------------------------------------------
|
|   Table prefix and migration table definitions.
|   
*/

define('PREFIX', $db_config['db'][ENVIRONMENT]['prefix']);
define('EGRESS_TS_SCHEMA_TBL_NAME', PREFIX . 'schema_migrations');

/*
|--------------------------------------------------------------------------
|   Autoloaders
|--------------------------------------------------------------------------
|
|   Set up our autoloaders for Egress and our migration files.
|   
*/

spl_autoload_register(function ($class) {
    if (is_readable($file = dirname(EGRESS_BASE) . SEP . str_replace('\\', SEP, $class) . '.php')):
        require $file;
    endif;
});

spl_autoload_register(function ($class) {
    if (is_readable($file = APP_PATH . str_replace('\\', SEP, $class) . '.php')):
        require $file;
    endif;
});

/*
|--------------------------------------------------------------------------
|   Application
|--------------------------------------------------------------------------
|
|   Ready --> Set --> GO!
|   
*/

$main = new \Egress\Library\FrameworkRunner($db_config, $argv);
echo $main->execute();
